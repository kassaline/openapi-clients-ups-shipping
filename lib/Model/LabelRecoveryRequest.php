<?php
/**
 * LabelRecoveryRequest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPIClientUPSShipping
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ship
 *
 * The Shipping Package API gives the application many ways to manage the shipment of packages to their destination. # Reference - <a href=\"https://developer.ups.com/api/reference/shipping/business-rules\" target=\"_blank\" rel=\"noopener\">Business Rules</a> - <a href=\"https://developer.ups.com/api/reference/shipping/appendix1\" target=\"_blank\" rel=\"noopener\">Appendix 1</a> - <a href=\"https://developer.ups.com/api/reference/shipping/appendix2\" target=\"_blank\" rel=\"noopener\">Appendix 2</a> - <a href=\"https://developer.ups.com/api/reference/shipping/errors\" target=\"_blank\" rel=\"noopener\">Errors</a> - <a href=\"https://developer.ups.com/api/reference/shipping/faq\" target=\"_blank\" rel=\"noopener\">FAQ</a> - <a href=\"https://developer.ups.com/api/reference/shipping/best-practices\" target=\"_blank\" rel=\"noopener noreferrer\"> Best Practices</a>  <br/><p>Try out UPS APIs with example requests using Postman and learn more about the UPS Postman Collection by visiting our <a href=\"https://developer.ups.com/api/reference/postman/guide\" target=\"_blank\" rel=\"noopener\">Postman Guide</a>. Explore API documentation and sample applications through GitHub.</p>  <a href=\"https://god.gw.postman.com/run-collection/29542085-af2f70b3-405b-4aee-af8d-1eb715e4cebc?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D29542085-af2f70b3-405b-4aee-af8d-1eb715e4cebc%26entityType%3Dcollection%26workspaceId%3D7e7595f0-4829-4f9a-aee1-75c126b9d417\" target=\"_blank\" rel=\"noopener noreferrer\">   <img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\"></a> <a href=\"https://github.com/UPS-API\" target=\"_blank\" rel=\"noopener noreferrer\">   <img src=\"https://www.ups.com/assets/resources/webcontent/images/gitHubButton.svg\" alt=\"Open in GitHub \" style=\"width: 128px; height: 32px;\"> </a>
 *
 * The version of the OpenAPI document: 
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPIClientUPSShipping\Model;

use \ArrayAccess;
use \OpenAPIClientUPSShipping\ObjectSerializer;

/**
 * LabelRecoveryRequest Class Doc Comment
 *
 * @category Class
 * @description Request for obtaining the Label for the return shipment.
 * @package  OpenAPIClientUPSShipping
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class LabelRecoveryRequest implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'LabelRecoveryRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'request' => '\OpenAPIClientUPSShipping\Model\LabelRecoveryRequestRequest',
        'labelSpecification' => '\OpenAPIClientUPSShipping\Model\LabelRecoveryRequestLabelSpecification',
        'translate' => '\OpenAPIClientUPSShipping\Model\LabelRecoveryRequestTranslate',
        'labelDelivery' => '\OpenAPIClientUPSShipping\Model\LabelRecoveryRequestLabelDelivery',
        'trackingNumber' => 'string',
        'mailInnovationsTrackingNumber' => 'string',
        'referenceValues' => '\OpenAPIClientUPSShipping\Model\LabelRecoveryRequestReferenceValues',
        'locale' => 'string',
        'uPSPremiumCareForm' => '\OpenAPIClientUPSShipping\Model\LabelRecoveryRequestUPSPremiumCareForm'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'request' => null,
        'labelSpecification' => null,
        'translate' => null,
        'labelDelivery' => null,
        'trackingNumber' => null,
        'mailInnovationsTrackingNumber' => null,
        'referenceValues' => null,
        'locale' => null,
        'uPSPremiumCareForm' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'request' => false,
        'labelSpecification' => false,
        'translate' => false,
        'labelDelivery' => false,
        'trackingNumber' => false,
        'mailInnovationsTrackingNumber' => false,
        'referenceValues' => false,
        'locale' => false,
        'uPSPremiumCareForm' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'request' => 'Request',
        'labelSpecification' => 'LabelSpecification',
        'translate' => 'Translate',
        'labelDelivery' => 'LabelDelivery',
        'trackingNumber' => 'TrackingNumber',
        'mailInnovationsTrackingNumber' => 'MailInnovationsTrackingNumber',
        'referenceValues' => 'ReferenceValues',
        'locale' => 'Locale',
        'uPSPremiumCareForm' => 'UPSPremiumCareForm'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'request' => 'setRequest',
        'labelSpecification' => 'setLabelSpecification',
        'translate' => 'setTranslate',
        'labelDelivery' => 'setLabelDelivery',
        'trackingNumber' => 'setTrackingNumber',
        'mailInnovationsTrackingNumber' => 'setMailInnovationsTrackingNumber',
        'referenceValues' => 'setReferenceValues',
        'locale' => 'setLocale',
        'uPSPremiumCareForm' => 'setUPSPremiumCareForm'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'request' => 'getRequest',
        'labelSpecification' => 'getLabelSpecification',
        'translate' => 'getTranslate',
        'labelDelivery' => 'getLabelDelivery',
        'trackingNumber' => 'getTrackingNumber',
        'mailInnovationsTrackingNumber' => 'getMailInnovationsTrackingNumber',
        'referenceValues' => 'getReferenceValues',
        'locale' => 'getLocale',
        'uPSPremiumCareForm' => 'getUPSPremiumCareForm'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('request', $data ?? [], null);
        $this->setIfExists('labelSpecification', $data ?? [], null);
        $this->setIfExists('translate', $data ?? [], null);
        $this->setIfExists('labelDelivery', $data ?? [], null);
        $this->setIfExists('trackingNumber', $data ?? [], null);
        $this->setIfExists('mailInnovationsTrackingNumber', $data ?? [], null);
        $this->setIfExists('referenceValues', $data ?? [], null);
        $this->setIfExists('locale', $data ?? [], null);
        $this->setIfExists('uPSPremiumCareForm', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['request'] === null) {
            $invalidProperties[] = "'request' can't be null";
        }
        if (!is_null($this->container['trackingNumber']) && (mb_strlen($this->container['trackingNumber']) > 18)) {
            $invalidProperties[] = "invalid value for 'trackingNumber', the character length must be smaller than or equal to 18.";
        }

        if (!is_null($this->container['trackingNumber']) && (mb_strlen($this->container['trackingNumber']) < 1)) {
            $invalidProperties[] = "invalid value for 'trackingNumber', the character length must be bigger than or equal to 1.";
        }

        if (!is_null($this->container['mailInnovationsTrackingNumber']) && (mb_strlen($this->container['mailInnovationsTrackingNumber']) > 34)) {
            $invalidProperties[] = "invalid value for 'mailInnovationsTrackingNumber', the character length must be smaller than or equal to 34.";
        }

        if (!is_null($this->container['mailInnovationsTrackingNumber']) && (mb_strlen($this->container['mailInnovationsTrackingNumber']) < 1)) {
            $invalidProperties[] = "invalid value for 'mailInnovationsTrackingNumber', the character length must be bigger than or equal to 1.";
        }

        if (!is_null($this->container['locale']) && (mb_strlen($this->container['locale']) > 5)) {
            $invalidProperties[] = "invalid value for 'locale', the character length must be smaller than or equal to 5.";
        }

        if (!is_null($this->container['locale']) && (mb_strlen($this->container['locale']) < 5)) {
            $invalidProperties[] = "invalid value for 'locale', the character length must be bigger than or equal to 5.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets request
     *
     * @return \OpenAPIClientUPSShipping\Model\LabelRecoveryRequestRequest
     */
    public function getRequest()
    {
        return $this->container['request'];
    }

    /**
     * Sets request
     *
     * @param \OpenAPIClientUPSShipping\Model\LabelRecoveryRequestRequest $request request
     *
     * @return self
     */
    public function setRequest($request)
    {
        if (is_null($request)) {
            throw new \InvalidArgumentException('non-nullable request cannot be null');
        }
        $this->container['request'] = $request;

        return $this;
    }

    /**
     * Gets labelSpecification
     *
     * @return \OpenAPIClientUPSShipping\Model\LabelRecoveryRequestLabelSpecification|null
     */
    public function getLabelSpecification()
    {
        return $this->container['labelSpecification'];
    }

    /**
     * Sets labelSpecification
     *
     * @param \OpenAPIClientUPSShipping\Model\LabelRecoveryRequestLabelSpecification|null $labelSpecification labelSpecification
     *
     * @return self
     */
    public function setLabelSpecification($labelSpecification)
    {
        if (is_null($labelSpecification)) {
            throw new \InvalidArgumentException('non-nullable labelSpecification cannot be null');
        }
        $this->container['labelSpecification'] = $labelSpecification;

        return $this;
    }

    /**
     * Gets translate
     *
     * @return \OpenAPIClientUPSShipping\Model\LabelRecoveryRequestTranslate|null
     */
    public function getTranslate()
    {
        return $this->container['translate'];
    }

    /**
     * Sets translate
     *
     * @param \OpenAPIClientUPSShipping\Model\LabelRecoveryRequestTranslate|null $translate translate
     *
     * @return self
     */
    public function setTranslate($translate)
    {
        if (is_null($translate)) {
            throw new \InvalidArgumentException('non-nullable translate cannot be null');
        }
        $this->container['translate'] = $translate;

        return $this;
    }

    /**
     * Gets labelDelivery
     *
     * @return \OpenAPIClientUPSShipping\Model\LabelRecoveryRequestLabelDelivery|null
     */
    public function getLabelDelivery()
    {
        return $this->container['labelDelivery'];
    }

    /**
     * Sets labelDelivery
     *
     * @param \OpenAPIClientUPSShipping\Model\LabelRecoveryRequestLabelDelivery|null $labelDelivery labelDelivery
     *
     * @return self
     */
    public function setLabelDelivery($labelDelivery)
    {
        if (is_null($labelDelivery)) {
            throw new \InvalidArgumentException('non-nullable labelDelivery cannot be null');
        }
        $this->container['labelDelivery'] = $labelDelivery;

        return $this;
    }

    /**
     * Gets trackingNumber
     *
     * @return string|null
     */
    public function getTrackingNumber()
    {
        return $this->container['trackingNumber'];
    }

    /**
     * Sets trackingNumber
     *
     * @param string|null $trackingNumber Small Package Tracking Number. Required if Mail Innovations Tracking Number or ReferenceNumber/Value and ShipperNumber is not provided.  If only TrackingNumber is provided, the request will be treated as Small Package Shipment. Label Recovery will return label for Small Package Tracking Number. If both, TrackingNumber and MailInnovationsTrackingNumber are provided, the request will be treated as Dual Mail Innovations Return Shipment. Label Recovery will return two labels one each for - Small Package Tracking Number and Mail Innovations Return Tracking Number.
     *
     * @return self
     */
    public function setTrackingNumber($trackingNumber)
    {
        if (is_null($trackingNumber)) {
            throw new \InvalidArgumentException('non-nullable trackingNumber cannot be null');
        }
        if ((mb_strlen($trackingNumber) > 18)) {
            throw new \InvalidArgumentException('invalid length for $trackingNumber when calling LabelRecoveryRequest., must be smaller than or equal to 18.');
        }
        if ((mb_strlen($trackingNumber) < 1)) {
            throw new \InvalidArgumentException('invalid length for $trackingNumber when calling LabelRecoveryRequest., must be bigger than or equal to 1.');
        }

        $this->container['trackingNumber'] = $trackingNumber;

        return $this;
    }

    /**
     * Gets mailInnovationsTrackingNumber
     *
     * @return string|null
     */
    public function getMailInnovationsTrackingNumber()
    {
        return $this->container['mailInnovationsTrackingNumber'];
    }

    /**
     * Sets mailInnovationsTrackingNumber
     *
     * @param string|null $mailInnovationsTrackingNumber Mail Innovations Tracking Number.  Required if Tracking Number or ReferenceNumber/Value is not populated.  If only MailInnovationsTrackingNumber is provided, the request will be treated as Single Mail Innovations Return Shipment. Label Recovery will return label for Mail Innovations Return Tracking Number. If both, TrackingNumber and MailInnovationsTrackingNumber are provided, the request will be treated as Dual Mail Innovations Return Shipment. Label Recovery will return two labels one each for - Small Package Tracking Number and Mail Innovations Return Tracking Number.
     *
     * @return self
     */
    public function setMailInnovationsTrackingNumber($mailInnovationsTrackingNumber)
    {
        if (is_null($mailInnovationsTrackingNumber)) {
            throw new \InvalidArgumentException('non-nullable mailInnovationsTrackingNumber cannot be null');
        }
        if ((mb_strlen($mailInnovationsTrackingNumber) > 34)) {
            throw new \InvalidArgumentException('invalid length for $mailInnovationsTrackingNumber when calling LabelRecoveryRequest., must be smaller than or equal to 34.');
        }
        if ((mb_strlen($mailInnovationsTrackingNumber) < 1)) {
            throw new \InvalidArgumentException('invalid length for $mailInnovationsTrackingNumber when calling LabelRecoveryRequest., must be bigger than or equal to 1.');
        }

        $this->container['mailInnovationsTrackingNumber'] = $mailInnovationsTrackingNumber;

        return $this;
    }

    /**
     * Gets referenceValues
     *
     * @return \OpenAPIClientUPSShipping\Model\LabelRecoveryRequestReferenceValues|null
     */
    public function getReferenceValues()
    {
        return $this->container['referenceValues'];
    }

    /**
     * Sets referenceValues
     *
     * @param \OpenAPIClientUPSShipping\Model\LabelRecoveryRequestReferenceValues|null $referenceValues referenceValues
     *
     * @return self
     */
    public function setReferenceValues($referenceValues)
    {
        if (is_null($referenceValues)) {
            throw new \InvalidArgumentException('non-nullable referenceValues cannot be null');
        }
        $this->container['referenceValues'] = $referenceValues;

        return $this;
    }

    /**
     * Gets locale
     *
     * @return string|null
     */
    public function getLocale()
    {
        return $this->container['locale'];
    }

    /**
     * Sets locale
     *
     * @param string|null $locale Represents 5 character ISO Locale that allows the user to request Reference Number Code on Label, Label instructions, Receipt instructions (if available for given tracking number) and High Value Report (if available for given tracking number) in desired language.  Locale is specified by the combination of language code and country or territory code - 2 character language code and 2 character country code seperated by an underscore ('_') character. Example - de_DE. Please refer to Appendix for supported values for Locale.  Either Translate container or Locale element can be present in a given request. Both can't be requested together in same request.
     *
     * @return self
     */
    public function setLocale($locale)
    {
        if (is_null($locale)) {
            throw new \InvalidArgumentException('non-nullable locale cannot be null');
        }
        if ((mb_strlen($locale) > 5)) {
            throw new \InvalidArgumentException('invalid length for $locale when calling LabelRecoveryRequest., must be smaller than or equal to 5.');
        }
        if ((mb_strlen($locale) < 5)) {
            throw new \InvalidArgumentException('invalid length for $locale when calling LabelRecoveryRequest., must be bigger than or equal to 5.');
        }

        $this->container['locale'] = $locale;

        return $this;
    }

    /**
     * Gets uPSPremiumCareForm
     *
     * @return \OpenAPIClientUPSShipping\Model\LabelRecoveryRequestUPSPremiumCareForm|null
     */
    public function getUPSPremiumCareForm()
    {
        return $this->container['uPSPremiumCareForm'];
    }

    /**
     * Sets uPSPremiumCareForm
     *
     * @param \OpenAPIClientUPSShipping\Model\LabelRecoveryRequestUPSPremiumCareForm|null $uPSPremiumCareForm uPSPremiumCareForm
     *
     * @return self
     */
    public function setUPSPremiumCareForm($uPSPremiumCareForm)
    {
        if (is_null($uPSPremiumCareForm)) {
            throw new \InvalidArgumentException('non-nullable uPSPremiumCareForm cannot be null');
        }
        $this->container['uPSPremiumCareForm'] = $uPSPremiumCareForm;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


