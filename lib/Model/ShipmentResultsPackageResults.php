<?php
/**
 * ShipmentResultsPackageResults
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPIClientUPSShipping
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ship
 *
 * The Shipping Package API gives the application many ways to manage the shipment of packages to their destination. # Reference - <a href=\"https://developer.ups.com/api/reference/shipping/business-rules\" target=\"_blank\" rel=\"noopener\">Business Rules</a> - <a href=\"https://developer.ups.com/api/reference/shipping/appendix1\" target=\"_blank\" rel=\"noopener\">Appendix 1</a> - <a href=\"https://developer.ups.com/api/reference/shipping/appendix2\" target=\"_blank\" rel=\"noopener\">Appendix 2</a> - <a href=\"https://developer.ups.com/api/reference/shipping/errors\" target=\"_blank\" rel=\"noopener\">Errors</a> - <a href=\"https://developer.ups.com/api/reference/shipping/faq\" target=\"_blank\" rel=\"noopener\">FAQ</a> - <a href=\"https://developer.ups.com/api/reference/shipping/best-practices\" target=\"_blank\" rel=\"noopener noreferrer\"> Best Practices</a>  <br/><p>Try out UPS APIs with example requests using Postman and learn more about the UPS Postman Collection by visiting our <a href=\"https://developer.ups.com/api/reference/postman/guide\" target=\"_blank\" rel=\"noopener\">Postman Guide</a>. Explore API documentation and sample applications through GitHub.</p>  <a href=\"https://god.gw.postman.com/run-collection/29542085-af2f70b3-405b-4aee-af8d-1eb715e4cebc?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D29542085-af2f70b3-405b-4aee-af8d-1eb715e4cebc%26entityType%3Dcollection%26workspaceId%3D7e7595f0-4829-4f9a-aee1-75c126b9d417\" target=\"_blank\" rel=\"noopener noreferrer\">   <img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\"></a> <a href=\"https://github.com/UPS-API\" target=\"_blank\" rel=\"noopener noreferrer\">   <img src=\"https://www.ups.com/assets/resources/webcontent/images/gitHubButton.svg\" alt=\"Open in GitHub \" style=\"width: 128px; height: 32px;\"> </a>
 *
 * The version of the OpenAPI document: 
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPIClientUPSShipping\Model;

use \ArrayAccess;
use \OpenAPIClientUPSShipping\ObjectSerializer;

/**
 * ShipmentResultsPackageResults Class Doc Comment
 *
 * @category Class
 * @package  OpenAPIClientUPSShipping
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class ShipmentResultsPackageResults implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ShipmentResults_PackageResults';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'trackingNumber' => 'string',
        'rateModifier' => '\OpenAPIClientUPSShipping\Model\PackageResultsRateModifier[]',
        'baseServiceCharge' => '\OpenAPIClientUPSShipping\Model\PackageResultsBaseServiceCharge',
        'serviceOptionsCharges' => '\OpenAPIClientUPSShipping\Model\PackageResultsServiceOptionsCharges',
        'shippingLabel' => '\OpenAPIClientUPSShipping\Model\PackageResultsShippingLabel',
        'shippingReceipt' => '\OpenAPIClientUPSShipping\Model\PackageResultsShippingReceipt',
        'uSPSPICNumber' => 'string',
        'cN22Number' => 'string',
        'accessorial' => '\OpenAPIClientUPSShipping\Model\PackageResultsAccessorial[]',
        'simpleRate' => '\OpenAPIClientUPSShipping\Model\PackageResultsSimpleRate',
        'form' => '\OpenAPIClientUPSShipping\Model\PackageResultsForm',
        'itemizedCharges' => '\OpenAPIClientUPSShipping\Model\PackageResultsItemizedCharges[]',
        'negotiatedCharges' => '\OpenAPIClientUPSShipping\Model\PackageResultsNegotiatedCharges'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'trackingNumber' => null,
        'rateModifier' => null,
        'baseServiceCharge' => null,
        'serviceOptionsCharges' => null,
        'shippingLabel' => null,
        'shippingReceipt' => null,
        'uSPSPICNumber' => null,
        'cN22Number' => null,
        'accessorial' => null,
        'simpleRate' => null,
        'form' => null,
        'itemizedCharges' => null,
        'negotiatedCharges' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'trackingNumber' => false,
        'rateModifier' => false,
        'baseServiceCharge' => false,
        'serviceOptionsCharges' => false,
        'shippingLabel' => false,
        'shippingReceipt' => false,
        'uSPSPICNumber' => false,
        'cN22Number' => false,
        'accessorial' => false,
        'simpleRate' => false,
        'form' => false,
        'itemizedCharges' => false,
        'negotiatedCharges' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'trackingNumber' => 'TrackingNumber',
        'rateModifier' => 'RateModifier',
        'baseServiceCharge' => 'BaseServiceCharge',
        'serviceOptionsCharges' => 'ServiceOptionsCharges',
        'shippingLabel' => 'ShippingLabel',
        'shippingReceipt' => 'ShippingReceipt',
        'uSPSPICNumber' => 'USPSPICNumber',
        'cN22Number' => 'CN22Number',
        'accessorial' => 'Accessorial',
        'simpleRate' => 'SimpleRate',
        'form' => 'Form',
        'itemizedCharges' => 'ItemizedCharges',
        'negotiatedCharges' => 'NegotiatedCharges'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'trackingNumber' => 'setTrackingNumber',
        'rateModifier' => 'setRateModifier',
        'baseServiceCharge' => 'setBaseServiceCharge',
        'serviceOptionsCharges' => 'setServiceOptionsCharges',
        'shippingLabel' => 'setShippingLabel',
        'shippingReceipt' => 'setShippingReceipt',
        'uSPSPICNumber' => 'setUSPSPICNumber',
        'cN22Number' => 'setCN22Number',
        'accessorial' => 'setAccessorial',
        'simpleRate' => 'setSimpleRate',
        'form' => 'setForm',
        'itemizedCharges' => 'setItemizedCharges',
        'negotiatedCharges' => 'setNegotiatedCharges'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'trackingNumber' => 'getTrackingNumber',
        'rateModifier' => 'getRateModifier',
        'baseServiceCharge' => 'getBaseServiceCharge',
        'serviceOptionsCharges' => 'getServiceOptionsCharges',
        'shippingLabel' => 'getShippingLabel',
        'shippingReceipt' => 'getShippingReceipt',
        'uSPSPICNumber' => 'getUSPSPICNumber',
        'cN22Number' => 'getCN22Number',
        'accessorial' => 'getAccessorial',
        'simpleRate' => 'getSimpleRate',
        'form' => 'getForm',
        'itemizedCharges' => 'getItemizedCharges',
        'negotiatedCharges' => 'getNegotiatedCharges'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('trackingNumber', $data ?? [], null);
        $this->setIfExists('rateModifier', $data ?? [], null);
        $this->setIfExists('baseServiceCharge', $data ?? [], null);
        $this->setIfExists('serviceOptionsCharges', $data ?? [], null);
        $this->setIfExists('shippingLabel', $data ?? [], null);
        $this->setIfExists('shippingReceipt', $data ?? [], null);
        $this->setIfExists('uSPSPICNumber', $data ?? [], null);
        $this->setIfExists('cN22Number', $data ?? [], null);
        $this->setIfExists('accessorial', $data ?? [], null);
        $this->setIfExists('simpleRate', $data ?? [], null);
        $this->setIfExists('form', $data ?? [], null);
        $this->setIfExists('itemizedCharges', $data ?? [], null);
        $this->setIfExists('negotiatedCharges', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['trackingNumber'] === null) {
            $invalidProperties[] = "'trackingNumber' can't be null";
        }
        if ((mb_strlen($this->container['trackingNumber']) > 18)) {
            $invalidProperties[] = "invalid value for 'trackingNumber', the character length must be smaller than or equal to 18.";
        }

        if ((mb_strlen($this->container['trackingNumber']) < 18)) {
            $invalidProperties[] = "invalid value for 'trackingNumber', the character length must be bigger than or equal to 18.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets trackingNumber
     *
     * @return string
     */
    public function getTrackingNumber()
    {
        return $this->container['trackingNumber'];
    }

    /**
     * Sets trackingNumber
     *
     * @param string $trackingNumber Package 1Z number.   For Mail Innovations shipments, please use the USPSPICNumber when tracking packages (a non-1Z number Mail Manifest Id is returned).
     *
     * @return self
     */
    public function setTrackingNumber($trackingNumber)
    {
        if (is_null($trackingNumber)) {
            throw new \InvalidArgumentException('non-nullable trackingNumber cannot be null');
        }
        if ((mb_strlen($trackingNumber) > 18)) {
            throw new \InvalidArgumentException('invalid length for $trackingNumber when calling ShipmentResultsPackageResults., must be smaller than or equal to 18.');
        }
        if ((mb_strlen($trackingNumber) < 18)) {
            throw new \InvalidArgumentException('invalid length for $trackingNumber when calling ShipmentResultsPackageResults., must be bigger than or equal to 18.');
        }

        $this->container['trackingNumber'] = $trackingNumber;

        return $this;
    }

    /**
     * Gets rateModifier
     *
     * @return \OpenAPIClientUPSShipping\Model\PackageResultsRateModifier[]|null
     */
    public function getRateModifier()
    {
        return $this->container['rateModifier'];
    }

    /**
     * Sets rateModifier
     *
     * @param \OpenAPIClientUPSShipping\Model\PackageResultsRateModifier[]|null $rateModifier Returned Package Information.  **NOTE:** For versions >= v2403, this element will always be returned as an array. For requests using versions < v2403, this element will be returned as an array if there is more than one object and a single object if there is only 1.
     *
     * @return self
     */
    public function setRateModifier($rateModifier)
    {
        if (is_null($rateModifier)) {
            throw new \InvalidArgumentException('non-nullable rateModifier cannot be null');
        }
        $this->container['rateModifier'] = $rateModifier;

        return $this;
    }

    /**
     * Gets baseServiceCharge
     *
     * @return \OpenAPIClientUPSShipping\Model\PackageResultsBaseServiceCharge|null
     */
    public function getBaseServiceCharge()
    {
        return $this->container['baseServiceCharge'];
    }

    /**
     * Sets baseServiceCharge
     *
     * @param \OpenAPIClientUPSShipping\Model\PackageResultsBaseServiceCharge|null $baseServiceCharge baseServiceCharge
     *
     * @return self
     */
    public function setBaseServiceCharge($baseServiceCharge)
    {
        if (is_null($baseServiceCharge)) {
            throw new \InvalidArgumentException('non-nullable baseServiceCharge cannot be null');
        }
        $this->container['baseServiceCharge'] = $baseServiceCharge;

        return $this;
    }

    /**
     * Gets serviceOptionsCharges
     *
     * @return \OpenAPIClientUPSShipping\Model\PackageResultsServiceOptionsCharges|null
     */
    public function getServiceOptionsCharges()
    {
        return $this->container['serviceOptionsCharges'];
    }

    /**
     * Sets serviceOptionsCharges
     *
     * @param \OpenAPIClientUPSShipping\Model\PackageResultsServiceOptionsCharges|null $serviceOptionsCharges serviceOptionsCharges
     *
     * @return self
     */
    public function setServiceOptionsCharges($serviceOptionsCharges)
    {
        if (is_null($serviceOptionsCharges)) {
            throw new \InvalidArgumentException('non-nullable serviceOptionsCharges cannot be null');
        }
        $this->container['serviceOptionsCharges'] = $serviceOptionsCharges;

        return $this;
    }

    /**
     * Gets shippingLabel
     *
     * @return \OpenAPIClientUPSShipping\Model\PackageResultsShippingLabel|null
     */
    public function getShippingLabel()
    {
        return $this->container['shippingLabel'];
    }

    /**
     * Sets shippingLabel
     *
     * @param \OpenAPIClientUPSShipping\Model\PackageResultsShippingLabel|null $shippingLabel shippingLabel
     *
     * @return self
     */
    public function setShippingLabel($shippingLabel)
    {
        if (is_null($shippingLabel)) {
            throw new \InvalidArgumentException('non-nullable shippingLabel cannot be null');
        }
        $this->container['shippingLabel'] = $shippingLabel;

        return $this;
    }

    /**
     * Gets shippingReceipt
     *
     * @return \OpenAPIClientUPSShipping\Model\PackageResultsShippingReceipt|null
     */
    public function getShippingReceipt()
    {
        return $this->container['shippingReceipt'];
    }

    /**
     * Sets shippingReceipt
     *
     * @param \OpenAPIClientUPSShipping\Model\PackageResultsShippingReceipt|null $shippingReceipt shippingReceipt
     *
     * @return self
     */
    public function setShippingReceipt($shippingReceipt)
    {
        if (is_null($shippingReceipt)) {
            throw new \InvalidArgumentException('non-nullable shippingReceipt cannot be null');
        }
        $this->container['shippingReceipt'] = $shippingReceipt;

        return $this;
    }

    /**
     * Gets uSPSPICNumber
     *
     * @return string|null
     */
    public function getUSPSPICNumber()
    {
        return $this->container['uSPSPICNumber'];
    }

    /**
     * Sets uSPSPICNumber
     *
     * @param string|null $uSPSPICNumber USPSPICNumber is USPS Package Identification; it should be used for tracking Mail Innovations shipments.
     *
     * @return self
     */
    public function setUSPSPICNumber($uSPSPICNumber)
    {
        if (is_null($uSPSPICNumber)) {
            throw new \InvalidArgumentException('non-nullable uSPSPICNumber cannot be null');
        }


        $this->container['uSPSPICNumber'] = $uSPSPICNumber;

        return $this;
    }

    /**
     * Gets cN22Number
     *
     * @return string|null
     */
    public function getCN22Number()
    {
        return $this->container['cN22Number'];
    }

    /**
     * Sets cN22Number
     *
     * @param string|null $cN22Number USPS defined CN22 ID number format varies based on destination country or territory.  Not applicable as of Jan 2015.  Mail Innovations shipments US to VI, PR, and GU are not considered international.
     *
     * @return self
     */
    public function setCN22Number($cN22Number)
    {
        if (is_null($cN22Number)) {
            throw new \InvalidArgumentException('non-nullable cN22Number cannot be null');
        }


        $this->container['cN22Number'] = $cN22Number;

        return $this;
    }

    /**
     * Gets accessorial
     *
     * @return \OpenAPIClientUPSShipping\Model\PackageResultsAccessorial[]|null
     */
    public function getAccessorial()
    {
        return $this->container['accessorial'];
    }

    /**
     * Sets accessorial
     *
     * @param \OpenAPIClientUPSShipping\Model\PackageResultsAccessorial[]|null $accessorial The container for Accessorial indicators. This information would be returned only for UPS Worldwide Express Freight and UPS Worldwide Express Freight Mid-day service request with Dry Ice or Oversize Pallet and SubVersion greater than or equal to 1707. This is valid only for UPS Worldwide Express Freight and UPS Worldwide Express Freight Mid-day service.  **NOTE:** For versions >= v2403, this element will always be returned as an array. For requests using versions < v2403, this element will be returned as an array if there is more than one object and a single object if there is only 1.
     *
     * @return self
     */
    public function setAccessorial($accessorial)
    {
        if (is_null($accessorial)) {
            throw new \InvalidArgumentException('non-nullable accessorial cannot be null');
        }
        $this->container['accessorial'] = $accessorial;

        return $this;
    }

    /**
     * Gets simpleRate
     *
     * @return \OpenAPIClientUPSShipping\Model\PackageResultsSimpleRate|null
     */
    public function getSimpleRate()
    {
        return $this->container['simpleRate'];
    }

    /**
     * Sets simpleRate
     *
     * @param \OpenAPIClientUPSShipping\Model\PackageResultsSimpleRate|null $simpleRate simpleRate
     *
     * @return self
     */
    public function setSimpleRate($simpleRate)
    {
        if (is_null($simpleRate)) {
            throw new \InvalidArgumentException('non-nullable simpleRate cannot be null');
        }
        $this->container['simpleRate'] = $simpleRate;

        return $this;
    }

    /**
     * Gets form
     *
     * @return \OpenAPIClientUPSShipping\Model\PackageResultsForm|null
     */
    public function getForm()
    {
        return $this->container['form'];
    }

    /**
     * Sets form
     *
     * @param \OpenAPIClientUPSShipping\Model\PackageResultsForm|null $form form
     *
     * @return self
     */
    public function setForm($form)
    {
        if (is_null($form)) {
            throw new \InvalidArgumentException('non-nullable form cannot be null');
        }
        $this->container['form'] = $form;

        return $this;
    }

    /**
     * Gets itemizedCharges
     *
     * @return \OpenAPIClientUPSShipping\Model\PackageResultsItemizedCharges[]|null
     */
    public function getItemizedCharges()
    {
        return $this->container['itemizedCharges'];
    }

    /**
     * Sets itemizedCharges
     *
     * @param \OpenAPIClientUPSShipping\Model\PackageResultsItemizedCharges[]|null $itemizedCharges Itemized Charges are returned only when the subversion element is present and greater than or equal to 1607. Package level itemized charges are only returned for US domestic movements.  **NOTE:** For versions >= v2403, this element will always be returned as an array. For requests using versions < v2403, this element will be returned as an array if there is more than one object and a single object if there is only 1.
     *
     * @return self
     */
    public function setItemizedCharges($itemizedCharges)
    {
        if (is_null($itemizedCharges)) {
            throw new \InvalidArgumentException('non-nullable itemizedCharges cannot be null');
        }
        $this->container['itemizedCharges'] = $itemizedCharges;

        return $this;
    }

    /**
     * Gets negotiatedCharges
     *
     * @return \OpenAPIClientUPSShipping\Model\PackageResultsNegotiatedCharges|null
     */
    public function getNegotiatedCharges()
    {
        return $this->container['negotiatedCharges'];
    }

    /**
     * Sets negotiatedCharges
     *
     * @param \OpenAPIClientUPSShipping\Model\PackageResultsNegotiatedCharges|null $negotiatedCharges negotiatedCharges
     *
     * @return self
     */
    public function setNegotiatedCharges($negotiatedCharges)
    {
        if (is_null($negotiatedCharges)) {
            throw new \InvalidArgumentException('non-nullable negotiatedCharges cannot be null');
        }
        $this->container['negotiatedCharges'] = $negotiatedCharges;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


