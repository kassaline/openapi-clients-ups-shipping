<?php
/**
 * ShipmentResponseShipmentResults
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPIClientUPSShipping
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ship
 *
 * The Shipping Package API gives the application many ways to manage the shipment of packages to their destination. # Reference - <a href=\"https://developer.ups.com/api/reference/shipping/business-rules\" target=\"_blank\" rel=\"noopener\">Business Rules</a> - <a href=\"https://developer.ups.com/api/reference/shipping/appendix1\" target=\"_blank\" rel=\"noopener\">Appendix 1</a> - <a href=\"https://developer.ups.com/api/reference/shipping/appendix2\" target=\"_blank\" rel=\"noopener\">Appendix 2</a> - <a href=\"https://developer.ups.com/api/reference/shipping/errors\" target=\"_blank\" rel=\"noopener\">Errors</a> - <a href=\"https://developer.ups.com/api/reference/shipping/faq\" target=\"_blank\" rel=\"noopener\">FAQ</a> - <a href=\"https://developer.ups.com/api/reference/shipping/best-practices\" target=\"_blank\" rel=\"noopener noreferrer\"> Best Practices</a>  <br/><p>Try out UPS APIs with example requests using Postman and learn more about the UPS Postman Collection by visiting our <a href=\"https://developer.ups.com/api/reference/postman/guide\" target=\"_blank\" rel=\"noopener\">Postman Guide</a>. Explore API documentation and sample applications through GitHub.</p>  <a href=\"https://god.gw.postman.com/run-collection/29542085-af2f70b3-405b-4aee-af8d-1eb715e4cebc?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D29542085-af2f70b3-405b-4aee-af8d-1eb715e4cebc%26entityType%3Dcollection%26workspaceId%3D7e7595f0-4829-4f9a-aee1-75c126b9d417\" target=\"_blank\" rel=\"noopener noreferrer\">   <img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\"></a> <a href=\"https://github.com/UPS-API\" target=\"_blank\" rel=\"noopener noreferrer\">   <img src=\"https://www.ups.com/assets/resources/webcontent/images/gitHubButton.svg\" alt=\"Open in GitHub \" style=\"width: 128px; height: 32px;\"> </a>
 *
 * The version of the OpenAPI document: 
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPIClientUPSShipping\Model;

use \ArrayAccess;
use \OpenAPIClientUPSShipping\ObjectSerializer;

/**
 * ShipmentResponseShipmentResults Class Doc Comment
 *
 * @category Class
 * @description Shipment Results container.
 * @package  OpenAPIClientUPSShipping
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class ShipmentResponseShipmentResults implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ShipmentResponse_ShipmentResults';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'disclaimer' => '\OpenAPIClientUPSShipping\Model\ShipmentResultsDisclaimer[]',
        'shipmentCharges' => '\OpenAPIClientUPSShipping\Model\ShipmentResultsShipmentCharges',
        'negotiatedRateCharges' => '\OpenAPIClientUPSShipping\Model\ShipmentResultsNegotiatedRateCharges',
        'fRSShipmentData' => '\OpenAPIClientUPSShipping\Model\ShipmentResultsFRSShipmentData',
        'ratingMethod' => 'string',
        'billableWeightCalculationMethod' => 'string',
        'billingWeight' => '\OpenAPIClientUPSShipping\Model\ShipmentResultsBillingWeight',
        'shipmentIdentificationNumber' => 'string',
        'mIDualReturnShipmentKey' => 'string',
        'barCodeImage' => 'string',
        'packageResults' => '\OpenAPIClientUPSShipping\Model\ShipmentResultsPackageResults[]',
        'controlLogReceipt' => '\OpenAPIClientUPSShipping\Model\ShipmentResultsControlLogReceipt[]',
        'form' => '\OpenAPIClientUPSShipping\Model\ShipmentResultsForm',
        'cODTurnInPage' => '\OpenAPIClientUPSShipping\Model\ShipmentResultsCODTurnInPage',
        'highValueReport' => '\OpenAPIClientUPSShipping\Model\ShipmentResultsHighValueReport',
        'labelURL' => 'string',
        'localLanguageLabelURL' => 'string',
        'receiptURL' => 'string',
        'localLanguageReceiptURL' => 'string',
        'dGPaperImage' => 'string[]',
        'masterCartonID' => 'string',
        'roarRatedIndicator' => 'string',
        'gCCN' => 'string',
        'uSI' => 'string',
        'message' => 'string',
        'subProNumber' => 'string',
        'palletLabel' => '\OpenAPIClientUPSShipping\Model\ShipmentResultsPalletLabel',
        'billOfLading' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'disclaimer' => null,
        'shipmentCharges' => null,
        'negotiatedRateCharges' => null,
        'fRSShipmentData' => null,
        'ratingMethod' => null,
        'billableWeightCalculationMethod' => null,
        'billingWeight' => null,
        'shipmentIdentificationNumber' => null,
        'mIDualReturnShipmentKey' => null,
        'barCodeImage' => null,
        'packageResults' => null,
        'controlLogReceipt' => null,
        'form' => null,
        'cODTurnInPage' => null,
        'highValueReport' => null,
        'labelURL' => null,
        'localLanguageLabelURL' => null,
        'receiptURL' => null,
        'localLanguageReceiptURL' => null,
        'dGPaperImage' => null,
        'masterCartonID' => null,
        'roarRatedIndicator' => null,
        'gCCN' => null,
        'uSI' => null,
        'message' => null,
        'subProNumber' => null,
        'palletLabel' => null,
        'billOfLading' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'disclaimer' => false,
        'shipmentCharges' => false,
        'negotiatedRateCharges' => false,
        'fRSShipmentData' => false,
        'ratingMethod' => false,
        'billableWeightCalculationMethod' => false,
        'billingWeight' => false,
        'shipmentIdentificationNumber' => false,
        'mIDualReturnShipmentKey' => false,
        'barCodeImage' => false,
        'packageResults' => false,
        'controlLogReceipt' => false,
        'form' => false,
        'cODTurnInPage' => false,
        'highValueReport' => false,
        'labelURL' => false,
        'localLanguageLabelURL' => false,
        'receiptURL' => false,
        'localLanguageReceiptURL' => false,
        'dGPaperImage' => false,
        'masterCartonID' => false,
        'roarRatedIndicator' => false,
        'gCCN' => false,
        'uSI' => false,
        'message' => false,
        'subProNumber' => false,
        'palletLabel' => false,
        'billOfLading' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'disclaimer' => 'Disclaimer',
        'shipmentCharges' => 'ShipmentCharges',
        'negotiatedRateCharges' => 'NegotiatedRateCharges',
        'fRSShipmentData' => 'FRSShipmentData',
        'ratingMethod' => 'RatingMethod',
        'billableWeightCalculationMethod' => 'BillableWeightCalculationMethod',
        'billingWeight' => 'BillingWeight',
        'shipmentIdentificationNumber' => 'ShipmentIdentificationNumber',
        'mIDualReturnShipmentKey' => 'MIDualReturnShipmentKey',
        'barCodeImage' => 'BarCodeImage',
        'packageResults' => 'PackageResults',
        'controlLogReceipt' => 'ControlLogReceipt',
        'form' => 'Form',
        'cODTurnInPage' => 'CODTurnInPage',
        'highValueReport' => 'HighValueReport',
        'labelURL' => 'LabelURL',
        'localLanguageLabelURL' => 'LocalLanguageLabelURL',
        'receiptURL' => 'ReceiptURL',
        'localLanguageReceiptURL' => 'LocalLanguageReceiptURL',
        'dGPaperImage' => 'DGPaperImage',
        'masterCartonID' => 'MasterCartonID',
        'roarRatedIndicator' => 'RoarRatedIndicator',
        'gCCN' => 'GCCN',
        'uSI' => 'USI',
        'message' => 'Message',
        'subProNumber' => 'SubProNumber',
        'palletLabel' => 'PalletLabel',
        'billOfLading' => 'BillOfLading'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'disclaimer' => 'setDisclaimer',
        'shipmentCharges' => 'setShipmentCharges',
        'negotiatedRateCharges' => 'setNegotiatedRateCharges',
        'fRSShipmentData' => 'setFRSShipmentData',
        'ratingMethod' => 'setRatingMethod',
        'billableWeightCalculationMethod' => 'setBillableWeightCalculationMethod',
        'billingWeight' => 'setBillingWeight',
        'shipmentIdentificationNumber' => 'setShipmentIdentificationNumber',
        'mIDualReturnShipmentKey' => 'setMIDualReturnShipmentKey',
        'barCodeImage' => 'setBarCodeImage',
        'packageResults' => 'setPackageResults',
        'controlLogReceipt' => 'setControlLogReceipt',
        'form' => 'setForm',
        'cODTurnInPage' => 'setCODTurnInPage',
        'highValueReport' => 'setHighValueReport',
        'labelURL' => 'setLabelURL',
        'localLanguageLabelURL' => 'setLocalLanguageLabelURL',
        'receiptURL' => 'setReceiptURL',
        'localLanguageReceiptURL' => 'setLocalLanguageReceiptURL',
        'dGPaperImage' => 'setDGPaperImage',
        'masterCartonID' => 'setMasterCartonID',
        'roarRatedIndicator' => 'setRoarRatedIndicator',
        'gCCN' => 'setGCCN',
        'uSI' => 'setUSI',
        'message' => 'setMessage',
        'subProNumber' => 'setSubProNumber',
        'palletLabel' => 'setPalletLabel',
        'billOfLading' => 'setBillOfLading'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'disclaimer' => 'getDisclaimer',
        'shipmentCharges' => 'getShipmentCharges',
        'negotiatedRateCharges' => 'getNegotiatedRateCharges',
        'fRSShipmentData' => 'getFRSShipmentData',
        'ratingMethod' => 'getRatingMethod',
        'billableWeightCalculationMethod' => 'getBillableWeightCalculationMethod',
        'billingWeight' => 'getBillingWeight',
        'shipmentIdentificationNumber' => 'getShipmentIdentificationNumber',
        'mIDualReturnShipmentKey' => 'getMIDualReturnShipmentKey',
        'barCodeImage' => 'getBarCodeImage',
        'packageResults' => 'getPackageResults',
        'controlLogReceipt' => 'getControlLogReceipt',
        'form' => 'getForm',
        'cODTurnInPage' => 'getCODTurnInPage',
        'highValueReport' => 'getHighValueReport',
        'labelURL' => 'getLabelURL',
        'localLanguageLabelURL' => 'getLocalLanguageLabelURL',
        'receiptURL' => 'getReceiptURL',
        'localLanguageReceiptURL' => 'getLocalLanguageReceiptURL',
        'dGPaperImage' => 'getDGPaperImage',
        'masterCartonID' => 'getMasterCartonID',
        'roarRatedIndicator' => 'getRoarRatedIndicator',
        'gCCN' => 'getGCCN',
        'uSI' => 'getUSI',
        'message' => 'getMessage',
        'subProNumber' => 'getSubProNumber',
        'palletLabel' => 'getPalletLabel',
        'billOfLading' => 'getBillOfLading'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('disclaimer', $data ?? [], null);
        $this->setIfExists('shipmentCharges', $data ?? [], null);
        $this->setIfExists('negotiatedRateCharges', $data ?? [], null);
        $this->setIfExists('fRSShipmentData', $data ?? [], null);
        $this->setIfExists('ratingMethod', $data ?? [], null);
        $this->setIfExists('billableWeightCalculationMethod', $data ?? [], null);
        $this->setIfExists('billingWeight', $data ?? [], null);
        $this->setIfExists('shipmentIdentificationNumber', $data ?? [], null);
        $this->setIfExists('mIDualReturnShipmentKey', $data ?? [], null);
        $this->setIfExists('barCodeImage', $data ?? [], null);
        $this->setIfExists('packageResults', $data ?? [], null);
        $this->setIfExists('controlLogReceipt', $data ?? [], null);
        $this->setIfExists('form', $data ?? [], null);
        $this->setIfExists('cODTurnInPage', $data ?? [], null);
        $this->setIfExists('highValueReport', $data ?? [], null);
        $this->setIfExists('labelURL', $data ?? [], null);
        $this->setIfExists('localLanguageLabelURL', $data ?? [], null);
        $this->setIfExists('receiptURL', $data ?? [], null);
        $this->setIfExists('localLanguageReceiptURL', $data ?? [], null);
        $this->setIfExists('dGPaperImage', $data ?? [], null);
        $this->setIfExists('masterCartonID', $data ?? [], null);
        $this->setIfExists('roarRatedIndicator', $data ?? [], null);
        $this->setIfExists('gCCN', $data ?? [], null);
        $this->setIfExists('uSI', $data ?? [], null);
        $this->setIfExists('message', $data ?? [], null);
        $this->setIfExists('subProNumber', $data ?? [], null);
        $this->setIfExists('palletLabel', $data ?? [], null);
        $this->setIfExists('billOfLading', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['ratingMethod']) && (mb_strlen($this->container['ratingMethod']) > 2)) {
            $invalidProperties[] = "invalid value for 'ratingMethod', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['ratingMethod']) && (mb_strlen($this->container['ratingMethod']) < 2)) {
            $invalidProperties[] = "invalid value for 'ratingMethod', the character length must be bigger than or equal to 2.";
        }

        if (!is_null($this->container['billableWeightCalculationMethod']) && (mb_strlen($this->container['billableWeightCalculationMethod']) > 2)) {
            $invalidProperties[] = "invalid value for 'billableWeightCalculationMethod', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['billableWeightCalculationMethod']) && (mb_strlen($this->container['billableWeightCalculationMethod']) < 2)) {
            $invalidProperties[] = "invalid value for 'billableWeightCalculationMethod', the character length must be bigger than or equal to 2.";
        }

        if ($this->container['billingWeight'] === null) {
            $invalidProperties[] = "'billingWeight' can't be null";
        }
        if (!is_null($this->container['shipmentIdentificationNumber']) && (mb_strlen($this->container['shipmentIdentificationNumber']) > 18)) {
            $invalidProperties[] = "invalid value for 'shipmentIdentificationNumber', the character length must be smaller than or equal to 18.";
        }

        if (!is_null($this->container['shipmentIdentificationNumber']) && (mb_strlen($this->container['shipmentIdentificationNumber']) < 18)) {
            $invalidProperties[] = "invalid value for 'shipmentIdentificationNumber', the character length must be bigger than or equal to 18.";
        }

        if (!is_null($this->container['mIDualReturnShipmentKey']) && (mb_strlen($this->container['mIDualReturnShipmentKey']) > 50)) {
            $invalidProperties[] = "invalid value for 'mIDualReturnShipmentKey', the character length must be smaller than or equal to 50.";
        }

        if (!is_null($this->container['mIDualReturnShipmentKey']) && (mb_strlen($this->container['mIDualReturnShipmentKey']) < 4)) {
            $invalidProperties[] = "invalid value for 'mIDualReturnShipmentKey', the character length must be bigger than or equal to 4.";
        }

        if (!is_null($this->container['masterCartonID']) && (mb_strlen($this->container['masterCartonID']) > 24)) {
            $invalidProperties[] = "invalid value for 'masterCartonID', the character length must be smaller than or equal to 24.";
        }

        if (!is_null($this->container['masterCartonID']) && (mb_strlen($this->container['masterCartonID']) < 1)) {
            $invalidProperties[] = "invalid value for 'masterCartonID', the character length must be bigger than or equal to 1.";
        }

        if (!is_null($this->container['uSI']) && !preg_match("/^(?:[0-9]{10}|[0-9]{9}T)$/", $this->container['uSI'])) {
            $invalidProperties[] = "invalid value for 'uSI', must be conform to the pattern /^(?:[0-9]{10}|[0-9]{9}T)$/.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets disclaimer
     *
     * @return \OpenAPIClientUPSShipping\Model\ShipmentResultsDisclaimer[]|null
     */
    public function getDisclaimer()
    {
        return $this->container['disclaimer'];
    }

    /**
     * Sets disclaimer
     *
     * @param \OpenAPIClientUPSShipping\Model\ShipmentResultsDisclaimer[]|null $disclaimer Disclaimer would be used to provide more information to shipper regarding the processed shipment. This would be used to notify shipper about possible taxes and duties that might have been added or might apply to the shipment. This field would be returned only if TaxInformationIndicator is present in a request.  **NOTE:** For versions >= v2403, this element will always be returned as an array. For requests using versions < v2403, this element will be returned as an array if there is more than one object and a single object if there is only 1.
     *
     * @return self
     */
    public function setDisclaimer($disclaimer)
    {
        if (is_null($disclaimer)) {
            throw new \InvalidArgumentException('non-nullable disclaimer cannot be null');
        }
        $this->container['disclaimer'] = $disclaimer;

        return $this;
    }

    /**
     * Gets shipmentCharges
     *
     * @return \OpenAPIClientUPSShipping\Model\ShipmentResultsShipmentCharges|null
     */
    public function getShipmentCharges()
    {
        return $this->container['shipmentCharges'];
    }

    /**
     * Sets shipmentCharges
     *
     * @param \OpenAPIClientUPSShipping\Model\ShipmentResultsShipmentCharges|null $shipmentCharges shipmentCharges
     *
     * @return self
     */
    public function setShipmentCharges($shipmentCharges)
    {
        if (is_null($shipmentCharges)) {
            throw new \InvalidArgumentException('non-nullable shipmentCharges cannot be null');
        }
        $this->container['shipmentCharges'] = $shipmentCharges;

        return $this;
    }

    /**
     * Gets negotiatedRateCharges
     *
     * @return \OpenAPIClientUPSShipping\Model\ShipmentResultsNegotiatedRateCharges|null
     */
    public function getNegotiatedRateCharges()
    {
        return $this->container['negotiatedRateCharges'];
    }

    /**
     * Sets negotiatedRateCharges
     *
     * @param \OpenAPIClientUPSShipping\Model\ShipmentResultsNegotiatedRateCharges|null $negotiatedRateCharges negotiatedRateCharges
     *
     * @return self
     */
    public function setNegotiatedRateCharges($negotiatedRateCharges)
    {
        if (is_null($negotiatedRateCharges)) {
            throw new \InvalidArgumentException('non-nullable negotiatedRateCharges cannot be null');
        }
        $this->container['negotiatedRateCharges'] = $negotiatedRateCharges;

        return $this;
    }

    /**
     * Gets fRSShipmentData
     *
     * @return \OpenAPIClientUPSShipping\Model\ShipmentResultsFRSShipmentData|null
     */
    public function getFRSShipmentData()
    {
        return $this->container['fRSShipmentData'];
    }

    /**
     * Sets fRSShipmentData
     *
     * @param \OpenAPIClientUPSShipping\Model\ShipmentResultsFRSShipmentData|null $fRSShipmentData fRSShipmentData
     *
     * @return self
     */
    public function setFRSShipmentData($fRSShipmentData)
    {
        if (is_null($fRSShipmentData)) {
            throw new \InvalidArgumentException('non-nullable fRSShipmentData cannot be null');
        }
        $this->container['fRSShipmentData'] = $fRSShipmentData;

        return $this;
    }

    /**
     * Gets ratingMethod
     *
     * @return string|null
     */
    public function getRatingMethod()
    {
        return $this->container['ratingMethod'];
    }

    /**
     * Sets ratingMethod
     *
     * @param string|null $ratingMethod RatingMethod is to indicate whether the Shipment was rated as shipment level or package level. This information will be returned only if RatingMethodRequestedIndicator is present in the request.  Valid values: 01 = Shipment level 02 = Package level
     *
     * @return self
     */
    public function setRatingMethod($ratingMethod)
    {
        if (is_null($ratingMethod)) {
            throw new \InvalidArgumentException('non-nullable ratingMethod cannot be null');
        }
        if ((mb_strlen($ratingMethod) > 2)) {
            throw new \InvalidArgumentException('invalid length for $ratingMethod when calling ShipmentResponseShipmentResults., must be smaller than or equal to 2.');
        }
        if ((mb_strlen($ratingMethod) < 2)) {
            throw new \InvalidArgumentException('invalid length for $ratingMethod when calling ShipmentResponseShipmentResults., must be bigger than or equal to 2.');
        }

        $this->container['ratingMethod'] = $ratingMethod;

        return $this;
    }

    /**
     * Gets billableWeightCalculationMethod
     *
     * @return string|null
     */
    public function getBillableWeightCalculationMethod()
    {
        return $this->container['billableWeightCalculationMethod'];
    }

    /**
     * Sets billableWeightCalculationMethod
     *
     * @param string|null $billableWeightCalculationMethod BillableWeightCalculationMethod is to indicate whether the billable weight calculation method utilized was - the package level or shipment level. This information will be returned only if RatingMethodRequestedIndicator is present in the request.  Valid values: 01 = Shipment Billable Weight 02 = Package Billable Weight
     *
     * @return self
     */
    public function setBillableWeightCalculationMethod($billableWeightCalculationMethod)
    {
        if (is_null($billableWeightCalculationMethod)) {
            throw new \InvalidArgumentException('non-nullable billableWeightCalculationMethod cannot be null');
        }
        if ((mb_strlen($billableWeightCalculationMethod) > 2)) {
            throw new \InvalidArgumentException('invalid length for $billableWeightCalculationMethod when calling ShipmentResponseShipmentResults., must be smaller than or equal to 2.');
        }
        if ((mb_strlen($billableWeightCalculationMethod) < 2)) {
            throw new \InvalidArgumentException('invalid length for $billableWeightCalculationMethod when calling ShipmentResponseShipmentResults., must be bigger than or equal to 2.');
        }

        $this->container['billableWeightCalculationMethod'] = $billableWeightCalculationMethod;

        return $this;
    }

    /**
     * Gets billingWeight
     *
     * @return \OpenAPIClientUPSShipping\Model\ShipmentResultsBillingWeight
     */
    public function getBillingWeight()
    {
        return $this->container['billingWeight'];
    }

    /**
     * Sets billingWeight
     *
     * @param \OpenAPIClientUPSShipping\Model\ShipmentResultsBillingWeight $billingWeight billingWeight
     *
     * @return self
     */
    public function setBillingWeight($billingWeight)
    {
        if (is_null($billingWeight)) {
            throw new \InvalidArgumentException('non-nullable billingWeight cannot be null');
        }
        $this->container['billingWeight'] = $billingWeight;

        return $this;
    }

    /**
     * Gets shipmentIdentificationNumber
     *
     * @return string|null
     */
    public function getShipmentIdentificationNumber()
    {
        return $this->container['shipmentIdentificationNumber'];
    }

    /**
     * Sets shipmentIdentificationNumber
     *
     * @param string|null $shipmentIdentificationNumber Returned UPS shipment ID number.1Z Number of the first package in the shipment.
     *
     * @return self
     */
    public function setShipmentIdentificationNumber($shipmentIdentificationNumber)
    {
        if (is_null($shipmentIdentificationNumber)) {
            throw new \InvalidArgumentException('non-nullable shipmentIdentificationNumber cannot be null');
        }
        if ((mb_strlen($shipmentIdentificationNumber) > 18)) {
            throw new \InvalidArgumentException('invalid length for $shipmentIdentificationNumber when calling ShipmentResponseShipmentResults., must be smaller than or equal to 18.');
        }
        if ((mb_strlen($shipmentIdentificationNumber) < 18)) {
            throw new \InvalidArgumentException('invalid length for $shipmentIdentificationNumber when calling ShipmentResponseShipmentResults., must be bigger than or equal to 18.');
        }

        $this->container['shipmentIdentificationNumber'] = $shipmentIdentificationNumber;

        return $this;
    }

    /**
     * Gets mIDualReturnShipmentKey
     *
     * @return string|null
     */
    public function getMIDualReturnShipmentKey()
    {
        return $this->container['mIDualReturnShipmentKey'];
    }

    /**
     * Sets mIDualReturnShipmentKey
     *
     * @param string|null $mIDualReturnShipmentKey MIDualReturnShipmentKey is unique key required to process Mail Innovations Dual Return Shipment.   The unique identifier (key) would be returned in response of first phase of Mail Innovations Dual Return Shipments.   This unique identifier (key) would be part of request for second phase of Mail Innovations Dual Return Shipments and would be played back in response for second phase of Mail Innovations Dual Return Shipment.  If the shipment is a Package return shipment, the package tracking number will be concatenated with the system time (in the format YYYY-MM-DDHH.MM.SS.NNN) and followed by service code.   If the shipment is an MI Returns shipment, the Mail Manifest ID (MMI) will be concatenated with the system time.
     *
     * @return self
     */
    public function setMIDualReturnShipmentKey($mIDualReturnShipmentKey)
    {
        if (is_null($mIDualReturnShipmentKey)) {
            throw new \InvalidArgumentException('non-nullable mIDualReturnShipmentKey cannot be null');
        }
        if ((mb_strlen($mIDualReturnShipmentKey) > 50)) {
            throw new \InvalidArgumentException('invalid length for $mIDualReturnShipmentKey when calling ShipmentResponseShipmentResults., must be smaller than or equal to 50.');
        }
        if ((mb_strlen($mIDualReturnShipmentKey) < 4)) {
            throw new \InvalidArgumentException('invalid length for $mIDualReturnShipmentKey when calling ShipmentResponseShipmentResults., must be bigger than or equal to 4.');
        }

        $this->container['mIDualReturnShipmentKey'] = $mIDualReturnShipmentKey;

        return $this;
    }

    /**
     * Gets barCodeImage
     *
     * @return string|null
     */
    public function getBarCodeImage()
    {
        return $this->container['barCodeImage'];
    }

    /**
     * Sets barCodeImage
     *
     * @param string|null $barCodeImage Bar Code Image will be returned as Base 64 encoded graphic image. Bar Code Image will be returned if BarCodeImageIndicator or BarCodeAndLabelIndicator is present.
     *
     * @return self
     */
    public function setBarCodeImage($barCodeImage)
    {
        if (is_null($barCodeImage)) {
            throw new \InvalidArgumentException('non-nullable barCodeImage cannot be null');
        }


        $this->container['barCodeImage'] = $barCodeImage;

        return $this;
    }

    /**
     * Gets packageResults
     *
     * @return \OpenAPIClientUPSShipping\Model\ShipmentResultsPackageResults[]|null
     */
    public function getPackageResults()
    {
        return $this->container['packageResults'];
    }

    /**
     * Sets packageResults
     *
     * @param \OpenAPIClientUPSShipping\Model\ShipmentResultsPackageResults[]|null $packageResults Returned Package Information.  **NOTE:** For versions >= v2403, this element will always be returned as an array. For requests using versions < v2403, this element will be returned as an array if there is more than one object and a single object if there is only 1.
     *
     * @return self
     */
    public function setPackageResults($packageResults)
    {
        if (is_null($packageResults)) {
            throw new \InvalidArgumentException('non-nullable packageResults cannot be null');
        }
        $this->container['packageResults'] = $packageResults;

        return $this;
    }

    /**
     * Gets controlLogReceipt
     *
     * @return \OpenAPIClientUPSShipping\Model\ShipmentResultsControlLogReceipt[]|null
     */
    public function getControlLogReceipt()
    {
        return $this->container['controlLogReceipt'];
    }

    /**
     * Sets controlLogReceipt
     *
     * @param \OpenAPIClientUPSShipping\Model\ShipmentResultsControlLogReceipt[]|null $controlLogReceipt Container for the High Value reports when forward shipments have declared value between $999 and $50,000 USD. \\nTwo copies of high value report needs to be pointed out.  **NOTE:** For versions >= v2409, this element will always be returned as an array. For requests using versions < v2409, this element will be returned as an array if there is more than one object and a single object if there is only 1.
     *
     * @return self
     */
    public function setControlLogReceipt($controlLogReceipt)
    {
        if (is_null($controlLogReceipt)) {
            throw new \InvalidArgumentException('non-nullable controlLogReceipt cannot be null');
        }
        $this->container['controlLogReceipt'] = $controlLogReceipt;

        return $this;
    }

    /**
     * Gets form
     *
     * @return \OpenAPIClientUPSShipping\Model\ShipmentResultsForm|null
     */
    public function getForm()
    {
        return $this->container['form'];
    }

    /**
     * Sets form
     *
     * @param \OpenAPIClientUPSShipping\Model\ShipmentResultsForm|null $form form
     *
     * @return self
     */
    public function setForm($form)
    {
        if (is_null($form)) {
            throw new \InvalidArgumentException('non-nullable form cannot be null');
        }
        $this->container['form'] = $form;

        return $this;
    }

    /**
     * Gets cODTurnInPage
     *
     * @return \OpenAPIClientUPSShipping\Model\ShipmentResultsCODTurnInPage|null
     */
    public function getCODTurnInPage()
    {
        return $this->container['cODTurnInPage'];
    }

    /**
     * Sets cODTurnInPage
     *
     * @param \OpenAPIClientUPSShipping\Model\ShipmentResultsCODTurnInPage|null $cODTurnInPage cODTurnInPage
     *
     * @return self
     */
    public function setCODTurnInPage($cODTurnInPage)
    {
        if (is_null($cODTurnInPage)) {
            throw new \InvalidArgumentException('non-nullable cODTurnInPage cannot be null');
        }
        $this->container['cODTurnInPage'] = $cODTurnInPage;

        return $this;
    }

    /**
     * Gets highValueReport
     *
     * @return \OpenAPIClientUPSShipping\Model\ShipmentResultsHighValueReport|null
     */
    public function getHighValueReport()
    {
        return $this->container['highValueReport'];
    }

    /**
     * Sets highValueReport
     *
     * @param \OpenAPIClientUPSShipping\Model\ShipmentResultsHighValueReport|null $highValueReport highValueReport
     *
     * @return self
     */
    public function setHighValueReport($highValueReport)
    {
        if (is_null($highValueReport)) {
            throw new \InvalidArgumentException('non-nullable highValueReport cannot be null');
        }
        $this->container['highValueReport'] = $highValueReport;

        return $this;
    }

    /**
     * Gets labelURL
     *
     * @return string|null
     */
    public function getLabelURL()
    {
        return $this->container['labelURL'];
    }

    /**
     * Sets labelURL
     *
     * @param string|null $labelURL URL will point to a page wherein label, receipt and other documents, if applicable, such as HighValueReport, CustomsInvoice and ImportControl instructions can be requested. LabelURL is returned only if the LabelLinksIndicator is requested for following shipments: Print/Electronic ImportControl shipment Print/Electronic Return shipment.  Forward shipment except for Mail Innovations Forward.
     *
     * @return self
     */
    public function setLabelURL($labelURL)
    {
        if (is_null($labelURL)) {
            throw new \InvalidArgumentException('non-nullable labelURL cannot be null');
        }


        $this->container['labelURL'] = $labelURL;

        return $this;
    }

    /**
     * Gets localLanguageLabelURL
     *
     * @return string|null
     */
    public function getLocalLanguageLabelURL()
    {
        return $this->container['localLanguageLabelURL'];
    }

    /**
     * Sets localLanguageLabelURL
     *
     * @param string|null $localLanguageLabelURL URL will point to a page wherein label, receipt and other documents, if applicable, such as HighValueReport, CustomsInvoice and ImportControl instructions can be requested. LocalLanguageLabelURL is returned only if the LabelLinksIndicator is requested for following shipments: Print/Electronic ImportControl shipment Print/Electronic Return shipment.  Forward shipment except for Mail Innovations Forward.  Not returned if LabelLinksIndicator is requested with Locale element.
     *
     * @return self
     */
    public function setLocalLanguageLabelURL($localLanguageLabelURL)
    {
        if (is_null($localLanguageLabelURL)) {
            throw new \InvalidArgumentException('non-nullable localLanguageLabelURL cannot be null');
        }


        $this->container['localLanguageLabelURL'] = $localLanguageLabelURL;

        return $this;
    }

    /**
     * Gets receiptURL
     *
     * @return string|null
     */
    public function getReceiptURL()
    {
        return $this->container['receiptURL'];
    }

    /**
     * Sets receiptURL
     *
     * @param string|null $receiptURL URL will point to a page wherein label, receipt and other documents, if applicable, such as HighValueReport, CustomsInvoice and ImportControl instructions can be requested. ReceiptURL is returned only if the LabelLinksIndicator is requested for following shipments: Print/Electronic ImportControl shipment Print/Electronic Return shipment.
     *
     * @return self
     */
    public function setReceiptURL($receiptURL)
    {
        if (is_null($receiptURL)) {
            throw new \InvalidArgumentException('non-nullable receiptURL cannot be null');
        }


        $this->container['receiptURL'] = $receiptURL;

        return $this;
    }

    /**
     * Gets localLanguageReceiptURL
     *
     * @return string|null
     */
    public function getLocalLanguageReceiptURL()
    {
        return $this->container['localLanguageReceiptURL'];
    }

    /**
     * Sets localLanguageReceiptURL
     *
     * @param string|null $localLanguageReceiptURL URL will point to a page wherein label, receipt and other documents, if applicable, such as HighValueReport, CustomsInvoice and ImportControl instructions can be requested. LocalLanguageReceiptURL is returned only if the LabelLinksIndicator is requested for following shipments: Print/Electronic ImportControl shipment Print/Electronic Return shipment.   Not returned if LabelLinksIndicator is requested with Locale element.
     *
     * @return self
     */
    public function setLocalLanguageReceiptURL($localLanguageReceiptURL)
    {
        if (is_null($localLanguageReceiptURL)) {
            throw new \InvalidArgumentException('non-nullable localLanguageReceiptURL cannot be null');
        }


        $this->container['localLanguageReceiptURL'] = $localLanguageReceiptURL;

        return $this;
    }

    /**
     * Gets dGPaperImage
     *
     * @return string[]|null
     */
    public function getDGPaperImage()
    {
        return $this->container['dGPaperImage'];
    }

    /**
     * Sets dGPaperImage
     *
     * @param string[]|null $dGPaperImage Dangerous Good Paper Image in pdf format. One multipage PDF document will be returned that will contain all required Dangrous Goods shipping paper copies for all Dangerous Goods packages. Only returned when DGSignatoryInfo is present.  **NOTE:** For versions >= v2403, this element will always be returned as an array. For requests using versions < v2403, this element will be returned as an array if there is more than one object and a single object if there is only 1.
     *
     * @return self
     */
    public function setDGPaperImage($dGPaperImage)
    {
        if (is_null($dGPaperImage)) {
            throw new \InvalidArgumentException('non-nullable dGPaperImage cannot be null');
        }
        $this->container['dGPaperImage'] = $dGPaperImage;

        return $this;
    }

    /**
     * Gets masterCartonID
     *
     * @return string|null
     */
    public function getMasterCartonID()
    {
        return $this->container['masterCartonID'];
    }

    /**
     * Sets masterCartonID
     *
     * @param string|null $masterCartonID Master Carton ID. MasterCartonID will be return if MasterCartonIndicator is present in request.
     *
     * @return self
     */
    public function setMasterCartonID($masterCartonID)
    {
        if (is_null($masterCartonID)) {
            throw new \InvalidArgumentException('non-nullable masterCartonID cannot be null');
        }
        if ((mb_strlen($masterCartonID) > 24)) {
            throw new \InvalidArgumentException('invalid length for $masterCartonID when calling ShipmentResponseShipmentResults., must be smaller than or equal to 24.');
        }
        if ((mb_strlen($masterCartonID) < 1)) {
            throw new \InvalidArgumentException('invalid length for $masterCartonID when calling ShipmentResponseShipmentResults., must be bigger than or equal to 1.');
        }

        $this->container['masterCartonID'] = $masterCartonID;

        return $this;
    }

    /**
     * Gets roarRatedIndicator
     *
     * @return string|null
     */
    public function getRoarRatedIndicator()
    {
        return $this->container['roarRatedIndicator'];
    }

    /**
     * Sets roarRatedIndicator
     *
     * @param string|null $roarRatedIndicator Informational only
     *
     * @return self
     */
    public function setRoarRatedIndicator($roarRatedIndicator)
    {
        if (is_null($roarRatedIndicator)) {
            throw new \InvalidArgumentException('non-nullable roarRatedIndicator cannot be null');
        }
        $this->container['roarRatedIndicator'] = $roarRatedIndicator;

        return $this;
    }

    /**
     * Gets gCCN
     *
     * @return string|null
     */
    public function getGCCN()
    {
        return $this->container['gCCN'];
    }

    /**
     * Sets gCCN
     *
     * @param string|null $gCCN Global Consolidation Carton Number
     *
     * @return self
     */
    public function setGCCN($gCCN)
    {
        if (is_null($gCCN)) {
            throw new \InvalidArgumentException('non-nullable gCCN cannot be null');
        }
        $this->container['gCCN'] = $gCCN;

        return $this;
    }

    /**
     * Gets uSI
     *
     * @return string|null
     */
    public function getUSI()
    {
        return $this->container['uSI'];
    }

    /**
     * Sets uSI
     *
     * @param string|null $uSI The unique shipment identifier (USI) is used to create Master, LTL and Child shipments. Used for Freight shipments.
     *
     * @return self
     */
    public function setUSI($uSI)
    {
        if (is_null($uSI)) {
            throw new \InvalidArgumentException('non-nullable uSI cannot be null');
        }

        if ((!preg_match("/^(?:[0-9]{10}|[0-9]{9}T)$/", ObjectSerializer::toString($uSI)))) {
            throw new \InvalidArgumentException("invalid value for \$uSI when calling ShipmentResponseShipmentResults., must conform to the pattern /^(?:[0-9]{10}|[0-9]{9}T)$/.");
        }

        $this->container['uSI'] = $uSI;

        return $this;
    }

    /**
     * Gets message
     *
     * @return string|null
     */
    public function getMessage()
    {
        return $this->container['message'];
    }

    /**
     * Sets message
     *
     * @param string|null $message A message indicating the status or result of the operation.
     *
     * @return self
     */
    public function setMessage($message)
    {
        if (is_null($message)) {
            throw new \InvalidArgumentException('non-nullable message cannot be null');
        }
        $this->container['message'] = $message;

        return $this;
    }

    /**
     * Gets subProNumber
     *
     * @return string|null
     */
    public function getSubProNumber()
    {
        return $this->container['subProNumber'];
    }

    /**
     * Sets subProNumber
     *
     * @param string|null $subProNumber The sub PRO number associated with the LTL shipment.
     *
     * @return self
     */
    public function setSubProNumber($subProNumber)
    {
        if (is_null($subProNumber)) {
            throw new \InvalidArgumentException('non-nullable subProNumber cannot be null');
        }
        $this->container['subProNumber'] = $subProNumber;

        return $this;
    }

    /**
     * Gets palletLabel
     *
     * @return \OpenAPIClientUPSShipping\Model\ShipmentResultsPalletLabel|null
     */
    public function getPalletLabel()
    {
        return $this->container['palletLabel'];
    }

    /**
     * Sets palletLabel
     *
     * @param \OpenAPIClientUPSShipping\Model\ShipmentResultsPalletLabel|null $palletLabel palletLabel
     *
     * @return self
     */
    public function setPalletLabel($palletLabel)
    {
        if (is_null($palletLabel)) {
            throw new \InvalidArgumentException('non-nullable palletLabel cannot be null');
        }
        $this->container['palletLabel'] = $palletLabel;

        return $this;
    }

    /**
     * Gets billOfLading
     *
     * @return string|null
     */
    public function getBillOfLading()
    {
        return $this->container['billOfLading'];
    }

    /**
     * Sets billOfLading
     *
     * @param string|null $billOfLading Base64-encoded image data.
     *
     * @return self
     */
    public function setBillOfLading($billOfLading)
    {
        if (is_null($billOfLading)) {
            throw new \InvalidArgumentException('non-nullable billOfLading cannot be null');
        }
        $this->container['billOfLading'] = $billOfLading;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


